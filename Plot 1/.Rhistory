book ='MI'
text <- readLines(sprintf("./%s.csv", book),encoding="UTF-8")
MI <- read.csv("~/Data Incubator/DataIncubator/MI.csv")
View(MI)
MI$Term
myCorpus = Corpus(VectorSource(MI$Term))
library(tm)
library(wordcloud)
library(memoise)
myCorpus = Corpus(VectorSource(MI$Term))
myCorpus = tm_map(myCorpus, content_transformer(tolower))
myCorpus = tm_map(myCorpus, removePunctuation)
myCorpus = tm_map(myCorpus, removeNumbers)
myCorpus = tm_map(myCorpus, removeWords,
c(stopwords("SMART"), "thy", "thou", "thee", "the", "and", "but"))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 1))
m = as.matrix(myDTM)
sort(rowSums(m), decreasing = TRUE)
MI <- read.csv("MI_2012.csv",
encoding="UTF-8")
myCorpus = Corpus(VectorSource(MI$concept))
library('tm')
myCorpus = Corpus(VectorSource(MI$concept))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 1))
m = as.matrix(myDTM)
sort(rowSums(myDTM), decreasing = TRUE)
dtms <- removeSparseTerms(myDTM, 0.1)
inspect(dtms)
freq <- colSums(as.matrix(myDTM))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 100))
MI <- read.csv("MI_2012.csv",
encoding="UTF-8")
(myCorpus = Corpus(VectorSource(MI$concept)))
library('tm')
(myCorpus = Corpus(VectorSource(MI$concept)))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 100))
m = as.matrix(myDTM)
MI <- read.csv("MI_2012.csv",
encoding="UTF-8")
(myCorpus = Corpus(VectorSource(MI$concept)))
library('tm')
(myCorpus = Corpus(VectorSource(MI$concept)))
myDTM = TermDocumentMatrix(myCorpus,
control = list(minWordLength = 1))
m = as.matrix(myDTM)
shiny::runApp()
shiny::runApp()
encoding="UTF-8")
library(ggplot2)
# The list of valid books
books <<- list("myocardial infarction in 1990" = "MI_1990",
"myocardial infarction in 1995" = "MI_1995",
"myocardial infarction in 2000" = "MI_2000",
"myocardial infarction in 2005" = "MI_2005",
"myocardial infarction in 2010" = "MI_2010",
"myocardial infarction in 2011" = "MI_2011",
"myocardial infarction in 2012" = "MI_2012",
"myocardial infarction in 2013" = "MI_2013",
"myocardial infarction in 2014" = "MI_2014",
"myocardial infarction in 2015" = "MI_2015")
# Using "memoise" to automatically cache the results
getTermMatrix <- memoise(function(book) {
# Careful not to let just any name slip in here; a
# malicious user could manipulate this value.
if (!(book %in% books))
stop("Unknown book")
MI <- read.csv(sprintf("./%s.csv", book),
encoding="UTF-8")
(myCorpus = Corpus(VectorSource(MI$concept)))
myDTM = TermDocumentMatrix(myCorpus,control = list(minWordLength = 1))
dtms <- removeSparseTerms(myDTM, 0.1)
freq <- sort(colSums(as.matrix(dtm)), decreasing=TRUE)
wf <- data.frame(word=names(freq), freq=freq)
p <- ggplot(subset(wf, freq>50), aes(word, freq))
p <- p + geom_bar(stat="identity")
p <- p + theme(axis.text.x=element_text(angle=45, hjust=1))
p
})
shiny::runApp()
shiny::runApp()
dtms <- removeSparseTerms(myDTM, 0.1)
freq <- sort(colSums(as.matrix(dtms)), decreasing=TRUE)
wf <- data.frame(word=names(freq), freq=freq)
shiny::runApp()
library(ggplot2)
p <- ggplot(subset(wf, freq>50), aes(word, freq))
p <- p + geom_bar(stat="identity")
p <- p + theme(axis.text.x=element_text(angle=45, hjust=1))
P
p
freq <- sort(colSums(as.matrix(myDTM)), decreasing=TRUE)
freq
wf <- data.frame(word=names(freq), freq=freq)
p <- ggplot(subset(wf, freq>50), aes(word, freq))
p <- p + geom_bar(stat="identity")
p <- p + theme(axis.text.x=element_text(angle=45, hjust=1))
p
p <- ggplot(subset(wf, freq>50), aes(word, freq))
p
p <- ggplot(subset(wf, freq>10), aes(word, freq))
p
MI <- read.csv("MI_2012.csv",
encoding="UTF-8")
dtm <- DocumentTermMatrix(MI)
dtm
(myCorpus = Corpus(VectorSource(MI$concept)))
dtm <- DocumentTermMatrix(myCorpus)
dtm
freq <- sort(colSums(as.matrix(dtm)), decreasing=TRUE)
wf <- data.frame(word=names(freq), freq=freq)
p <- ggplot(subset(wf, freq>50), aes(word, freq))
p <- p + geom_bar(stat="identity")
p <- p + theme(axis.text.x=element_text(angle=45, hjust=1))
p
shiny::runApp()
shiny::runApp()
